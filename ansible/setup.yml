- hosts: all
  become: yes # This means that all tasks will be executed with sudo
  vars_files:
    - vars.yml

  tasks:
    - name:    Add Docker GPG key
      apt_key: url=https://download.docker.com/linux/ubuntu/gpg

    - name:    Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} edge

    - name: Install list of packages
      apt:
        name: [ 'apt-transport-https',  'ca-certificates',  'curl',
                'software-properties-common',  'docker-ce']
        state: present
        update_cache: yes


    - name: Copy docker API configuration
      copy:
        src: "{{ playbook_dir }}/files/daemon.json"
        dest: /etc/docker/daemon.json
        owner: root
        group: root
        mode: 0755

    - name: Create docker systemd config files
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        mode: 0755

    - name: Copy docker API configuration
      copy:
        src: "{{ playbook_dir }}/files/hosts.conf"
        dest: /etc/systemd/system/docker.service.d/hosts.conf
        owner: root
        group: root
        mode: 0755

    - name: Reload docker service
      systemd:
        state: restarted
        daemon_reload: yes
        name: docker

    - name: Install Python 3.6
      apt:
        name: ['python3.6',
               'python3-pip']
        state: present

    - name: Install docker compose
      pip:
        name: ['docker-compose',
               'setuptools', 'pyyaml']
        state: present

    - name: Run with inline v2 compose
      docker_service:
        project_name: alytics_service
        definition:
          version: '2'
          services:
            postgres:
              build: "{{ playbook_dir }}/../postgres_init"
              environment:
                POSTGRES_USER: "{{ pg_user }}"
                POSTGRES_PASSWORD: "{{ pg_pass }}"
              ports:
                - "5433:5432"

            redis:
              image: redis:5
              ports:
                - "6380:6379"

            rabbit:
              hostname: rabbit
              image: rabbitmq:latest
              environment:
                RABBITMQ_DEFAULT_USER: "{{ rabbit_user }}"
                RABBITMQ_DEFAULT_PASS: "{{ rabbit_pass }}"
              ports:
                - "5673:5672"

            highcharts:
              image: onsdigital/highcharts-export-node
              ports:
                - "8882:8080"

            points_generator:
              build: "{{ playbook_dir }}/../points_generator"
              environment:
                PG_URL: "{{ pg_url }}"
              ports:
                - "5002:8000"
              links:
                - postgres
              depends_on:
                - postgres

            web:
              build: "{{ playbook_dir }}/../web"
              environment:
                PG_URL: "{{ pg_url }}"
              ports:
                - "5001:8000"
              links:
                - postgres
                - rabbit
                - redis
              depends_on:
                - postgres
                - rabbit
                - redis


      register: compose_output

    - debug:
        var: compose_output

#    - debug:
#        var: ansible_facts
#    - assert:
#        that:
#        - "db.flask_db_1.state.running"

